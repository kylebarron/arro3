name: Python

on:
    push:
        branches:
            - main
    pull_request:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    pre-commit:
        name: Run pre-commit on Python code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Cache pre-commit virtualenvs
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pre-commit
                  key: pre-commit-3|${{ hashFiles('.pre-commit-config.yaml') }}

            - name: run pre-commit
              run: |
                  python -m pip install pre-commit
                  pre-commit run --all-files

    test-python:
        name: Build and test Python
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.9", "3.12", "3.13", "3.13t"]
        steps:
            - uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - uses: Swatinem/rust-cache@v2

            - name: Install a specific version of uv
              uses: astral-sh/setup-uv@v7
              with:
                  enable-cache: true
                  version: "0.8.x"

            - name: Set up Python with uv
              run: |
                  uv python install ${{ matrix.python-version }}

            - name: Build rust submodules
              run: |
                  # Note: core module must be first, because it's depended on by others
                  uv run --python ${{ matrix.python-version }} maturin dev -m arro3-core/Cargo.toml
                  uv run --python ${{ matrix.python-version }} maturin dev -m arro3-compute/Cargo.toml
                  uv run --python ${{ matrix.python-version }} maturin dev -m arro3-io/Cargo.toml

            - name: Run python tests
              if: matrix.python-version != '3.13t'
              run: |
                  uv run --python ${{ matrix.python-version }} pytest tests

            - name: Run python tests with --require-gil-disabled
              if: matrix.python-version == '3.13t'
              run: |
                  uv run --python ${{ matrix.python-version }} pytest tests --require-gil-disabled

            # Ensure docs build without warnings
            - name: Check docs
              run: uv run --group docs mkdocs build --strict
